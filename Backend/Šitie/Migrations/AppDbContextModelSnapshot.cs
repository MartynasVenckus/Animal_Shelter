// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Šitie.Models;

namespace Šitie.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Šitie.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArrivedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ChipDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FurColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FurType")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HealthCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("VaccineDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArivalDate = new DateTime(2020, 7, 26, 15, 3, 42, 695, DateTimeKind.Local).AddTicks(7901),
                            ArrivedFrom = "Kaunas",
                            BornDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(2020, 6, 16, 15, 3, 42, 697, DateTimeKind.Local).AddTicks(9994),
                            DepartureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Labai jautrus",
                            FurColor = "Rudas su juodais taškeliais",
                            FurType = 1,
                            Gender = 0,
                            HealthCondition = "Sveikas, trūksta 1 kojos",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 0,
                            Type = 1,
                            VaccineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArivalDate = new DateTime(2020, 4, 27, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(7911),
                            ArrivedFrom = "Vilnius",
                            BornDate = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(2020, 7, 26, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(7941),
                            DepartureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Labai miela, reikalauja dėmesio",
                            FurColor = "Juoda baltomis letenėlėmis",
                            FurType = 2,
                            Gender = 1,
                            HealthCondition = "Sveika, alergiška šunims",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 0,
                            Type = 0,
                            VaccineDate = new DateTime(2015, 8, 5, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(7951)
                        },
                        new
                        {
                            Id = 3,
                            ArivalDate = new DateTime(2020, 6, 16, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8089),
                            ArrivedFrom = "Klaipėda",
                            BornDate = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Driežas",
                            FurColor = "Žalsvai pilkas",
                            FurType = 1,
                            Gender = 0,
                            HealthCondition = "Sveikas",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 0,
                            Type = 2,
                            VaccineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArivalDate = new DateTime(2020, 4, 27, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8096),
                            ArrivedFrom = "Kaunas",
                            BornDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(2020, 6, 16, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8099),
                            DepartureDate = new DateTime(2020, 8, 4, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8104),
                            Description = "-",
                            FurColor = "Ruda",
                            FurType = 0,
                            Gender = 0,
                            HealthCondition = "Labai ligotas",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 1,
                            Type = 0,
                            VaccineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ArivalDate = new DateTime(2020, 4, 27, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8107),
                            ArrivedFrom = "Kaunas",
                            BornDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(2020, 6, 16, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8110),
                            DepartureDate = new DateTime(2020, 8, 3, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8113),
                            Description = "-",
                            FurColor = "Ruda",
                            FurType = 0,
                            Gender = 0,
                            HealthCondition = "Truputi ligotas",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 2,
                            Type = 0,
                            VaccineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ArivalDate = new DateTime(2020, 4, 27, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8117),
                            ArrivedFrom = "Kaunas",
                            BornDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ChipDate = new DateTime(2020, 6, 16, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8120),
                            DepartureDate = new DateTime(2020, 7, 26, 15, 3, 42, 698, DateTimeKind.Local).AddTicks(8124),
                            Description = "-",
                            FurColor = "Ruda",
                            FurType = 0,
                            Gender = 1,
                            HealthCondition = "Puiki",
                            OrganizationData = @"Katino svajonė 
 Partizanų g. 15, Kaunas 50203 
 (8-655) 15024",
                            Status = 2,
                            Type = 0,
                            VaccineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Šitie.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "vardenis.pvardenis@gmail.com",
                            IsAdmin = true,
                            Name = "Vardenis",
                            Password = "123456",
                            Surname = "Pavardenis"
                        },
                        new
                        {
                            Id = 2,
                            Email = "domas@gmail.com",
                            IsAdmin = false,
                            Name = "Domas",
                            Password = "asdfasfsafas",
                            Surname = "Domaitis"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lukas.lukaitis@gmail.com",
                            IsAdmin = false,
                            Name = "Lukas",
                            Password = "12345678",
                            Surname = "Lukaitis"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
